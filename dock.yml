---
- name: installation of Docker CE, Docker Compose
  hosts: kibana
  become: yes

  vars:
    ansible_ssh_user: "user"
    docker_gpg_url: https://download.docker.com/linux/ubuntu/gpg
    docker_repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    docker_compose_url: https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system | lower }}-{{ ansible_machine }}

  tasks:
    - name: apt update
      apt:
        update_cache: yes

    - name: dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Установка GPG ключа Docker через команду shell
      shell: |
        curl -fsSL {{ docker_gpg_url }} | apt-key add -

    - name: adding Dockers repo
      apt_repository:
        repo: "{{ docker_repo }}"
        state: present

    - name: Обновление списка пакетов после добавления репозитория
      apt:
        update_cache: yes

    - name: install Docker CE
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: check installation Docker
      command: docker --version
      register: docker_version
      failed_when: docker_version.rc != 0

    - name: add user to docker group
      ansible.builtin.user:
        name: user
        groups: docker
        append: true

    - name: Загрузить Docker Compose вручную
      shell: |
        curl -L -o /usr/local/bin/docker-compose {{ docker_compose_url }}
      args:
        creates: /usr/local/bin/docker-compose

    - name: Сделать docker-compose исполняемым
      file:
        path: /usr/local/bin/docker-compose
        mode: '0755'

    - name: check Docker Compose
      command: docker-compose --version
      register: compose_version
      failed_when: compose_version.rc != 0

    - name: restart docker
      systemd:
        name: docker
        state: restarted
        enabled: yes

    - name: show version of Docker, Docker Compose
      debug:
        msg:
          - "Docker version: {{ docker_version.stdout }}"
          - "Docker Compose version: {{ compose_version.stdout }}"

    - name: run kibana docker container
      docker_container:
        name: kibana01
        image: elastic/kibana:9.2.0
        state: started
        ports:
          - "5601:5601"
        restart_policy: always
        env:
          ELASTICSEARCH_HOSTS: "http://10.0.1.27:9200"
